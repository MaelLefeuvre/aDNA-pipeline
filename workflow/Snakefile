configfile: "./config/config.yml"
configfile: "./config/samples.yml"

wildcard_constraints:
    chr = "\d+",

# ---- Generate a global metadata file. Keeps track of seeding values + commit hashes.
checkpoint meta:
    output:
        metadata = "results/meta/pipeline-metadata.yml"
    script: "scripts/print-meta.py"


include: "rules/00-common.smk"
include: "rules/00-netrules.smk"
include: "rules/00-preprocess-reference.smk"
include: "rules/01-align-fastqs.smk"
include: "rules/02-preprocess-bams.smk"
include: "rules/03-variant-calling.smk"
include: "rules/04-merge-reich-plink.smk"
include: "rules/05-READ.smk"
include: "rules/05-TKGWV2.smk"
include: "rules/05-grups-rs.smk"
include: "rules/05-KIN.smk"

localrules: meta, fetch_data, preprocess, pileup, qc, READ, GRUPS, TKGWV2, KIN, all


rule fetch_data:
    """
    Download all required datasets within the ./data/ directory
    """
    input:
        expand(rules.download_1000_genomes.output.vcf, chr=range(1,23)),
        rules.fetch_samples_panel.output.panel,
        rules.download_reference_genome.output.refgen,
        rules.download_HapMapII_recombination_map.output.map,
        [file.format(**resolve_aadr_version()) for file in rules.download_reich_1240K.output.eigenstrat],
        rules.download_TKGWV2_support_files.output.support_files


rule preprocess:
    input:
        meta  = rules.meta.output,
        files = get_pileup_input_bams


rule pileup:
    input:
        "results/02-variant-calling/01-pileup/samples.pileup"

rule qc:
    input:
        rules.run_sex_assignation.output,
        rules.aggregate_mosdepths.output,
        rules.aggregate_genomecovs.output,
        rules.get_bamlist_panel_coverage.output,
        expand(rules.plot_coverage.output.plot, sample = get_sample_names())

rule READ:
    input:
        rules.meta.output,
        rules.run_READ.output,
        rules.READ_get_pairwise_snp_overlap.output,
        rules.READ_get_relatedness_coefficient.output

rule GRUPS:
    input:
        rules.run_GRUPS.output

rule TKGWV2:
    input:
        rules.merge_TKGWV2_results.output.result

rule KIN:
    input:
        rules.run_KIN.output.KIN_results

rule all:
    default_target: True
    input:
        rules.meta.output,
        rules.pileup.input,
        rules.qc.output,
        rules.TKGWV2.input,
        rules.READ.input,
        rules.GRUPS.input,
        rules.KIN.input,
        
